name: Build Geode Mod

on:
  workflow_dispatch:
  push:
    branches:
      - "**"

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        config:
        - name: Windows
          os: windows-latest

        - name: macOS
          os: macos-latest

        - name: Android32
          os: ubuntu-latest
          target: Android32

        - name: Android64
          os: ubuntu-latest
          target: Android64

    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Install OpenSSL on Windows
        if: matrix.config.name == 'Windows'
        run: |
          choco install openssl
          echo "OPENSSL_ROOT_DIR=C:\\Users\\runneradmin\\AppData\Local\\Temp\\chocolatey\\openssl\\3.3.2" >> $GITHUB_ENV
          echo "OPENSSL_LIBRARIES=C:\\Users\\runneradmin\\AppData\Local\\Temp\\chocolatey\\openssl\\3.3.2\\lib" >> $GITHUB_ENV
          echo "OPENSSL_INCLUDE_DIR=C:\\Users\\runneradmin\\AppData\Local\\Temp\\chocolatey\\openssl\\3.3.2\\include" >> $GITHUB_ENV

      - name: Install OpenSSL on macOS
        if: matrix.config.name == 'macOS'
        run: |
          brew install openssl
          echo "OPENSSL_ROOT_DIR=$(brew --prefix openssl)" >> $GITHUB_ENV
          echo "OPENSSL_LIBRARIES=$(brew --prefix openssl)/lib" >> $GITHUB_ENV
          echo "OPENSSL_INCLUDE_DIR=$(brew --prefix openssl)/include" >> $GITHUB_ENV

      - name: Install OpenSSL on Ubuntu (for Android)
        if: startsWith(matrix.config.name, 'Android')
        run: |
          sudo apt-get update
          sudo apt-get install -y openssl
          echo "OPENSSL_ROOT_DIR=/usr" >> $GITHUB_ENV
          echo "OPENSSL_LIBRARIES=/usr/lib" >> $GITHUB_ENV
          echo "OPENSSL_INCLUDE_DIR=/usr/include" >> $GITHUB_ENV

      - name: Build the mod
        uses: geode-sdk/build-geode-mod@main
        with:
          bindings: geode-sdk/bindings
          bindings-ref: main
          combine: true
          target: ${{ matrix.config.target }}

  package:
    name: Package builds
    runs-on: ubuntu-latest
    needs: ['build']

    steps:
      - uses: geode-sdk/build-geode-mod/combine@main
        id: build

      - uses: actions/upload-artifact@v4
        with:
          name: Build Output
          path: ${{ steps.build.outputs.build-output }}
